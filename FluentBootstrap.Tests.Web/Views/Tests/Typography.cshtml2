@using FluentBootstrap.Typography;

@using (Html.Bootstrap().Container())
{
    @Html.Bootstrap().Heading1("Headings")
    using (Html.Bootstrap().Div().Id("test-heading-levels"))
    {
        @Html.Bootstrap().Heading1("Heading 1")
        @Html.Bootstrap().Heading2("Heading 2")
        @Html.Bootstrap().Heading3("Heading 3")
        @Html.Bootstrap().Heading4("Heading 4")
        @Html.Bootstrap().Heading5("Heading 5")
        @Html.Bootstrap().Heading6("Heading 6")
    }
    
    <hr/>

    @Html.Bootstrap().Heading1("Small")
    using (Html.Bootstrap().Div().Id("test-small"))
    {
        @Html.Bootstrap().Heading3("Heading 3").Small("This is small")
    }

    <hr />

    @Html.Bootstrap().Heading1("Alignment")
    using (Html.Bootstrap().Div().Id("test-alignment"))
    {
        @Html.Bootstrap().Paragraph("Left").TextLeft()
        using(Html.Bootstrap().Paragraph().TextRight())
        {
            <text>Right</text>
        }
        @Html.Bootstrap().Paragraph("Center").TextCenter()
        @Html.Bootstrap().Paragraph("Justify").TextJustify()
        @Html.Bootstrap().Paragraph("No Wrap").TextNoWrap()
    }

    <hr />

    @Html.Bootstrap().Heading1("Transformation")
    using (Html.Bootstrap().Div().Id("test-transformation"))
    {
        @Html.Bootstrap().Paragraph("Lowercase").TextLowercase()
        @Html.Bootstrap().Paragraph("Uppercase").TextUppercase()
        @Html.Bootstrap().Paragraph("capitalized text").TextCapitalize()
    }

    <hr />

    @Html.Bootstrap().Heading1("Multiple Text Classes")
    using (Html.Bootstrap().Div().Id("test-multiple-text-classes"))
    {
        @Html.Bootstrap().Paragraph("Multiple").TextUppercase().TextCenter()
    }

    <hr />

    @Html.Bootstrap().Heading1("Unordered List")
    using (Html.Bootstrap().Div().Id("test-unordered-list"))
    {
        using(var list = Html.Bootstrap().List(ListType.Unordered))
        {
            @list.ListItem("One")
            @list.ListItem("Two")
        }
    }

    <hr />

    @Html.Bootstrap().Heading1("Ordered List")
    using (Html.Bootstrap().Div().Id("test-ordered-list"))
    {
        using (var list = Html.Bootstrap().List(ListType.Ordered))
        {
            @list.ListItem("One")
            @list.ListItem("Two")
        }
    }

    <hr />

    @Html.Bootstrap().Heading1("Unstyled List")
    using (Html.Bootstrap().Div().Id("test-unstyled-list"))
    {
        using (var list = Html.Bootstrap().List(ListType.Unstyled))
        {
            @list.ListItem("One")
            @list.ListItem("Two")
        }
    }

    <hr />

    @Html.Bootstrap().Heading1("Inline List")
    using (Html.Bootstrap().Div().Id("test-inline-list"))
    {
        using (var list = Html.Bootstrap().List(ListType.Inline))
        {
            @list.ListItem("One")
            @list.ListItem("Two")
        }
    }

    <hr />

    @Html.Bootstrap().Heading1("Description List")
    using (Html.Bootstrap().Div().Id("test-description-list"))
    {
        using (var list = Html.Bootstrap().DescriptionList())
        {
            @list.DescriptionTerm("Term")
            @list.DescriptionDescription("Desc")
            @list.DescriptionTerm("One")
            @list.DescriptionDescription("Two")
        }
    }

    <hr />

    @Html.Bootstrap().Heading1("Horizontal Description List")
    using (Html.Bootstrap().Div().Id("test-horizontal-description-list"))
    {
        using (var list = Html.Bootstrap().DescriptionList().Horizontal())
        {
            @list.DescriptionTerm("Term")
            @list.DescriptionDescription("Desc")
            @list.DescriptionTerm("One")
            @list.DescriptionDescription("Two")
        }
    }
}