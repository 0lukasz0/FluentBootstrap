@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Heading1("Inline Icon")
    using (Html.Bootstrap().Div().SetId("test-inline-icon").Begin())
    {
        <text>This is an inline @Html.Bootstrap().Icon(Icon.ArrowUp) icon.</text>
    }
    
    <hr />

    @Html.Bootstrap().Heading1("Button Icon")
    using (Html.Bootstrap().Div().SetId("test-button-icon").Begin())
    {
        @Html.Bootstrap().Button("Icon Button").Icon(Icon.Bell)
    }

    <hr />

    @Html.Bootstrap().Heading1("Link Button Icon")
    using (Html.Bootstrap().Div().SetId("test-link-button-icon").Begin())
    {
        @Html.Bootstrap().LinkButton("Link Button").Icon(Icon.Picture)
    }

    <hr />

    @Html.Bootstrap().Heading1("Link Icon")
    using (Html.Bootstrap().Div().SetId("test-link-icon").Begin())
    {
        @Html.Bootstrap().Link("Link").Icon(Icon.Road)
    }

    <hr />

    @Html.Bootstrap().Heading1("Form Feedback")
    using (Html.Bootstrap().Div().SetId("test-form-feedback").Begin())
    {
        using (var form = Html.Bootstrap().Form())
        {
            @form.Input("Normal", "Normal").HasFeedback(Icon.OkCircle)
            @form.Input("Error", "Error").HasError().HasFeedback(Icon.RemoveCircle)
            @form.Input("SrOnly").HasWarning().HasFeedback(Icon.Check).ControlLabel("SrOnly Label", x => x.SrOnly())
        }
    }
}